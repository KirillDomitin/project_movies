services:

  nginx:
    image: nginx:1.27
    env_file:
      - ./env/.env.ngx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/src/staticfiles
    depends_on:
      - admin_panel
      - postgres_db
    ports:
      - "${NGINX_PORT:-80}:80"

  admin_panel:
    container_name: admin_panel
    env_file:
      - ./env/.env.db
      - ./env/.env.django
    build: ./admin_panel_movies
    volumes:
      - static_volume:/src/staticfiles
    ports:
      - '${DJANGO_PORT:-8000}:8000'
    depends_on:
      postgres_db:
        condition: service_healthy

  postgres_db:
    image: postgres:17.4
    env_file:
      - ./env/.env.db
    volumes:
      - shared_pg_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U app -d movies_database' ]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.17.3
    env_file:
      - ./env/.env.elastic
    environment:
      ES_JAVA_OPTS: -Xms2g -Xmx2g
      ELASTIC_USERNAME: admin
      ELASTIC_PASSWORD: 123
      discovery.type: single-node
      xpack.security.enabled: false
    volumes:
      - elastic_volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health || exit 1
      interval: 5s
      retries: 10
      start_period: 15s

  redis:
    image: redis:latest
    container_name: redis_container
    env_file:
      - ./env/.env.redis
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data

  kibana:
    image: kibana:8.17.3
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  etl:
    build: ./ETL
    container_name: etl
    env_file: ./env/.env.etl
    depends_on:
      elasticsearch:
        condition: service_healthy

volumes:
  postgres_volume:
    name: postgres_volume
  elastic_volume:
    name: elastic_volume
  redis_volume:
    name: redis
  static_volume:
